# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        if not head:
            return False
        if not head.next:
            return False
        if head == head.next:
            return True
        
        ptr1 = head
        ptr2 = head.next

        while ptr1 and ptr2:
            if not ptr1 and not ptr2:
                return False
            if ptr1 == ptr2:
                return True
            ptr1=ptr1.next
            if not ptr2.next:
                ptr2 = ptr2.next
            else:
                ptr2=ptr2.next.next
        return False

        
