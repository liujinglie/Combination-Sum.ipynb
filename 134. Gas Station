class Solution:
    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:
        n=len(gas)
        if n==1 and gas[0]-cost[0]>=0:
            return 0
        start=0
        ms=-1
        m=0
        s=0
        for i in range(2*n):
            s+=gas[i%(n)]-cost[i%(n)]
            if s<0:
                s=0
                start=i+1
            if s>m:
                ms=start
                m=max(s,m)
        if ms==-1:
            return -1
        s=0
        for i in range(ms,ms+n):
            s=s+gas[i%(n)]-cost[i%(n)]
            if s<0:
                return -1
        return ms

        
