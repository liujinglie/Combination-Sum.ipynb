# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxDepth(self, root: Optional[TreeNode]) -> int:

        if root is None:
            return 0
        

        height  =1

        def recursive_height_cal(height,node):
            if node:
                if node.left and node.right:
                    height  = height + max(recursive_height_cal(height,node.left),recursive_height_cal(height,node.right))
                
                elif node.left:
                    height  = height + recursive_height_cal(height,node.left)
                
                elif node.right:
                    height  = height + recursive_height_cal(height,node.right)
            return height
        return recursive_height_cal(height,root)
