class Solution:
    def findMin(self, nums: List[int]) -> int:
        # Devide and Conquere
        # Binary search approach 

        def l_less_eq_r(arr):
            if arr[0] <= arr[len(arr)-1]:
                return True
            else:
                return False

        if nums[0] < nums[len(nums)-1]:
            return nums[0]

        while True:
            l = 0
            r = len(nums) 
            m = (r-l)//2

            print(nums)
            if len(nums) == 1:
                return nums[0]

            if len(nums) == 2:
                if nums[0] <= nums[1]:
                    return nums[0]
                else:
                    return nums[1]
            L = nums[l:m]
            R = nums[m:r]

            #  0 1 2 3 > 2 3 0 1
            if l_less_eq_r(L) and l_less_eq_r(R):
                if R[0] <= L[0]:
                    return R[0]
            print(L)
            print(R)
            if not l_less_eq_r(L):
                # L
                nums = L
            else:
                # R
                nums = R
