class Solution:
    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:
        def countDifferences(w1, w2):
            count = 0
            for i in range(len(w1)):
                if w1[i] != w2[i]:
                    count += 1
                    if count > 1:
                        return count
            return count

        if endWord not in wordList:
            return 0

        queue = deque([(beginWord, 1)])
        visited = set()

        while queue:
            word, steps = queue.popleft()
            if word == endWord:
                return steps
            elif word not in visited:
                visited.add(word)
                neighbors = []
                for w in wordList:
                    if countDifferences(w, word) == 1:
                        queue.append((w, steps + 1))
        
        return 0
